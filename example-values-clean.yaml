global:
  hostname: gen3-crl.test.biocommons.org.au
  # In `dev` mode postgres & elasticsearch will be in same deployment,
  # controlled by a StatefulSet:
  dev: true
  tls:
    cert: |
      -----BEGIN CERTIFICATE-----
      -----END CERTIFICATE-----
      -----BEGIN CERTIFICATE-----
      -----END CERTIFICATE-----
    key: |
      -----BEGIN PRIVATE KEY-----
      -----END PRIVATE KEY-----

# GraphQL queries
guppy:
  enabled: true

portal:
# if using the production image quay.io/cdis/data-portal, bump up memory from
# the default of 4G specified in portal/values.yaml to 8G to avoid OOMKiller
# termination of the deployment pod
  resources:
    # -- (map) The amount of resources that the container requests
    requests:
      # -- (string) The amount of memory requested
      memory: 8192Mi
    # -- (map) The maximum amount of resources that the container is allowed to use
    limits:
      # -- (string) The maximum amount of memory the container can use
      memory: 8192Mi
  image:
    # -- (string) Docker repository.
    repository: quay.io/cdis/data-portal
    # -- (string) Docker pull policy.
    pullPolicy: Always
    # -- (string) Overrides the image tag whose default is the chart appVersion.
    tag: "master"

fence:
  FENCE_CONFIG:
    # If true, will bypass OIDC login, and log in a user with username "test".
    # WARNING: DO NOT ENABLE IN PRODUCTION (for testing purposes only).
    MOCK_AUTH: true

  USER_YAML: |
    cloud_providers: {}
    authz:
      # policies automatically given to anyone, even if they are not authenticated
      anonymous_policies:
      - open_data_reader

      # policies automatically given to authenticated users (in addition to their other policies)
      all_users_policies: []

      groups:
      # can CRUD programs and projects and upload data files
      - name: data_submitters
        policies:
        - services.sheepdog-admin
        - data_upload
        - MyFirstProject_submitter
        users:
        - username1@gmail.com
        - test

      # can create/update/delete indexd records
      - name: indexd_admins
        policies:
        - indexd_admin
        users:
        - username1@gmail.com
        - test

      resources:
      - name: workspace
      - name: data_file
      - name: services
        subresources:
        - name: sheepdog
          subresources:
          - name: submission
            subresources:
            - name: program
            - name: project
        - name: 'indexd'
          subresources:
            - name: 'admin'
        - name: audit
          subresources:
            - name: presigned_url
            - name: login
      - name: open
      - name: programs
        subresources:
        - name: MyFirstProgram
          subresources:
          - name: projects
            subresources:
            - name: MyFirstProject

      policies:
      - id: workspace
        description: be able to use workspace
        resource_paths:
        - /workspace
        role_ids:
        - workspace_user
      - id: data_upload
        description: upload raw data files to S3
        role_ids:
        - file_uploader
        resource_paths:
        - /data_file
      - id: services.sheepdog-admin
        description: CRUD access to programs and projects
        role_ids:
          - sheepdog_admin
        resource_paths:
          - /services/sheepdog/submission/program
          - /services/sheepdog/submission/project
      - id: indexd_admin
        description: full access to indexd API
        role_ids:
          - indexd_admin
        resource_paths:
          - /programs
      - id: open_data_reader
        role_ids:
          - peregrine_reader
          - guppy_reader
          - fence_storage_reader
        resource_paths:
        - /open
      - id: all_programs_reader
        role_ids:
        - peregrine_reader
        - guppy_reader
        - fence_storage_reader
        resource_paths:
        - /programs
      - id: MyFirstProject_submitter
        role_ids:
        - reader
        - creator
        - updater
        - deleter
        - storage_reader
        - storage_writer
        resource_paths:
        - /programs/MyFirstProgram/projects/MyFirstProject

      roles:
      - id: file_uploader
        permissions:
        - id: file_upload
          action:
            service: fence
            method: file_upload
      - id: workspace_user
        permissions:
        - id: workspace_access
          action:
            service: jupyterhub
            method: access
      - id: sheepdog_admin
        description: CRUD access to programs and projects
        permissions:
        - id: sheepdog_admin_action
          action:
            service: sheepdog
            method: '*'
      - id: indexd_admin
        description: full access to indexd API
        permissions:
        - id: indexd_admin
          action:
            service: indexd
            method: '*'
      - id: admin
        permissions:
          - id: admin
            action:
              service: '*'
              method: '*'
      - id: creator
        permissions:
          - id: creator
            action:
              service: '*'
              method: create
      - id: reader
        permissions:
          - id: reader
            action:
              service: '*'
              method: read
      - id: updater
        permissions:
          - id: updater
            action:
              service: '*'
              method: update
      - id: deleter
        permissions:
          - id: deleter
            action:
              service: '*'
              method: delete
      - id: storage_writer
        permissions:
          - id: storage_creator
            action:
              service: '*'
              method: write-storage
      - id: storage_reader
        permissions:
          - id: storage_reader
            action:
              service: '*'
              method: read-storage
      - id: peregrine_reader
        permissions:
        - id: peregrine_reader
          action:
            method: read
            service: peregrine
      - id: guppy_reader
        permissions:
        - id: guppy_reader
          action:
            method: read
            service: guppy
      - id: fence_storage_reader
        permissions:
        - id: fence_storage_reader
          action:
            method: read-storage
            service: fence

    clients:
      wts:
        policies:
        - all_programs_reader
        - open_data_reader

    users:
      username1@gmail.com: {}
      username2:
        tags:
          name: John Doe
          email: johndoe@gmail.com
        policies:
        - MyFirstProject_submitter
      test:
        policies:
        - workspace

# persistent database
postgresql:
  primary:
    persistence:
      enabled: true

etl:
  image:
    tube:
      # -- (string) The Docker image repository for the fence service
      repository: quay.io/cdis/tube
      # -- (string) When to pull the image. This value should be "Always" to ensure the latest image is used.
      pullPolicy: Always
      # -- (string) Overrides the image tag whose default is the chart appVersion.
      tag: "master"
    spark:
      # -- (string) The Docker image repository for the spark service
      repository: quay.io/cdis/gen3-spark
      # -- (string) When to pull the image. This value should be "Always" to ensure the latest image is used.
      pullPolicy: Always
      # -- (string) Overrides the image tag whose default is the chart appVersion.
      tag: "stable"
